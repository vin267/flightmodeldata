Ticket table
id   seatnumber
1, a01
2, a02     


flight
f01
f02

flightticket
1, f01, a01
2, f01, a02
3, f02, a01
4, f02, a02


problem we are trying to solve: give me all flights between given range

1. change to datetime
2. query:
	a) qry = Flight.query.filter(Flight.date.between('1985-01-17', '1988-01-17')).id
	res of this query ===> multiple pk of flight table for given condition ---> [1,2]
	
	b) FlightTickets.query.filter(FlightTickets.id.in_([1,2])).all()

	Orders.query.filter(Orders.order_date.between('2018-07-01', '2018-07-31')).all()

	check---Flights.query.filter(Flights.date.in_(["2020-09-09T00:00:00","2020-09-11T00:00:00"])).all()


1. Flight.querydate===> range()
res = [1, 2]

2.


	

	
	id, flightid, ticketid
	1, 1,1
	2,1,3
	3,2,4


id=7, ticket_id=1, flight_id=1

Flights.query.filter_by(date=datetime.datetime(2020, 8, 4, 0, 0)).first().id


create api api/flights?startdate=1-1-1&enddate=2-2-2

1. flights table, get the id's that lies in the date range
2.

--> find seatnumber list and append it in the dictionary



'''if x.flight.flightNumber in flight_ticket_dic:
                #flight_ticket_dic[x.flight.flightNumber] = x.ticket.seatNumber + flight_ticket_dic[x.flight.flightNumber]
                seat.append(flight_ticket_dic[x.flight.flightNumber])
                seat.append(x.ticket.seatNumber)
            else:
                flight_ticket_dic[x.flight.flightNumber] = x.ticket.seatNumber
            print("abc: ",flight_ticket_dic)'''
            #flight_ticket_dic[x.flight.flightNumber] =
            #flight_ticket_ls.append(x.flight.flightNumber)
            #flight_ticket_ls.append(x.ticket.seatNumber)
            #print(flight_ticket_ls)
            '''if x.flight.flightNumber in dic:
                dic[x.flight.flightNumber] = x.ticket.cost + dic[x.flight.flightNumber]
                #dic[x.flight.flightNumber] = x.ticket.seatNumber
            else:
                dic[x.flight.flightNumber] = x.ticket.cost
                #dic[x.flight.flightNumber] = x.ticket.seatNumber'''
        '''for i in dic:
            values = (dic[i])
            flatten_list = list(deepflatten(values))
            dic[i] = sum(flatten_list)
        print(dic)'''

    #{'F01'}


    '''def get(self):
        startDate = request.args.get('startDate')
        enddate = request.args.get('endDate')
        if startDate == "" or enddate == "":
            posts = Flights.query.all()
            return (flights_schema.dump(posts))
        x = Flights.query.filter(Flights.date.between(startDate, enddate)).all()
        y = [x.id for x in x]
        name_ls = ['flightNumber', 'occupiedSeats']
        flightNumber = []
        z = FlightsTickets.query.filter(FlightsTickets.id.in_(y)).all()
        for i in z:
            flightNumber.append(i.flight.flightNumber)
        print(flightNumber)
        # zz=(dict(zip(name_ls,res_ls)))
        # print(zz)
        ticketNumber = []
        for i in z:
            ticketNumber.append(i.ticket.seatNumber)
        print(ticketNumber)

        final_ls = list(zip(flightNumber, ticketNumber))
        x = []
        for i in final_ls:
            x.append(list(zip(name_ls, i)))
        z = []
        for i in x:
            y = (dict(i))
            z.append(y)
        return z'''

api.add_resource(FlightsQuery, '/api/flights')




